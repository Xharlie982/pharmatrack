openapi: 3.0.3
info:
  title: Catálogo de Productos API
  version: "1.2.0"
  description: "Servicio para la gestión centralizada de productos de PharmaTrack."

servers:
  - url: "{basePath}"
    variables:
      basePath: { default: "/catalogo" }
  - url: http://localhost:8084{basePath}
    variables:
      basePath: { default: "/catalogo" }

tags:
  - name: Health
    description: Verificación de estado del servicio
  - name: Productos
    description: Operaciones sobre el catálogo de productos

paths:
  /healthz:
    get:
      tags: [Health]
      summary: Health check
      description: Endpoint ligero usado por el Balanceador de Carga para verificar que el servicio está activo.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: ok }

  /productos:
    get:
      tags: [Productos]
      summary: Listar y buscar productos
      description: Obtiene una lista paginada de productos con filtros.
      parameters:
        - in: query
          name: keyword
          schema: { type: string }
          description: "Texto para buscar en nombre o keywords del producto."
        - in: query
          name: codigo_atc
          schema: { type: string }
          description: "Código ATC del producto."
        - in: query
          name: requiere_receta
          schema: { type: boolean }
          description: "Filtra por si necesita receta."
        - in: query
          name: activo
          schema: { type: boolean }
          description: "Filtra por productos activos (habilitados para la venta)."
        - in: query
          name: tamano_pagina
          schema: { type: integer, default: 50, minimum: 1, maximum: 200 }
          description: "Cantidad de resultados por página."
        - in: query
          name: pagina
          schema: { type: integer, default: 1, minimum: 1 }
          description: "Número de página (1-based)."
      responses:
        "200":
          description: Lista paginada de productos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  total: { type: integer, example: 100 }
                  pagina: { type: integer, example: 1 }
                  tamano_pagina: { type: integer, example: 50 }
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/Producto"
    post:
      tags: [Productos]
      summary: Crear un nuevo producto
      description: "Crea un nuevo producto en el catálogo. Los timestamps (creado_en, actualizado_en) son gestionados por el servidor."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductoCreate"
      responses:
        "201":
          description: Creado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Producto"
        "400":
          description: "Datos de entrada inválidos (Error de Validación)"
        "409":
          description: "Conflicto, recurso duplicado (ej: _id o codigo_barras ya existe)"

  /productos/{id}:
    get:
      tags: [Productos]
      summary: Obtener producto por ID
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
          description: "ID canónico (string) del producto."
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Producto"
        "404":
          description: Producto no encontrado
    put:
      tags: [Productos]
      summary: Actualizar o desactivar un producto (Upsert)
      description: "Actualiza un producto. Para desactivarlo (soft delete), envía 'activo: false'."
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
          description: "ID canónico (string) del producto."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductoUpdate"
      responses:
        "200":
          description: Actualizado o creado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Producto"

components:
  schemas:
    Variante:
      type: object
      required: [codigo_barras]
      properties:
        codigo_barras: { type: string, description: "Código de barras (EAN/UPC)." }
        forma_farmaceutica: { type: string, nullable: true }
        concentracion_dosis: { type: string, nullable: true }
        unidades_por_paquete: { type: integer, nullable: true }

    Producto:
      type: object
      required: [_id, nombre]
      properties:
        _id: { type: string, description: "ID canónico (string)" }
        nombre: { type: string }
        codigo_atc: { type: string, nullable: true }
        requiere_receta: { type: boolean, nullable: true }
        activo: { type: boolean, default: true }
        keywords:
          type: array
          items: { type: string }
        variantes:
          type: array
          items:
            $ref: "#/components/schemas/Variante"
        creado_en: { type: string, format: date-time, readOnly: true }
        actualizado_en: { type: string, format: date-time, readOnly: true }

    ProductoCreate:
      type: object
      required: [_id, nombre]
      description: "Datos para crear un producto. Timestamps se ignoran."
      properties:
        _id: { type: string, description: "ID canónico (string)" }
        nombre: { type: string }
        codigo_atc: { type: string, nullable: true }
        requiere_receta: { type: boolean, nullable: true }
        activo: { type: boolean, default: true }
        keywords:
          type: array
          items: { type: string }
        variantes:
          type: array
          items:
            $ref: "#/components/schemas/Variante"

    ProductoUpdate:
      type: object
      required: [nombre]
      description: "Datos para actualizar un producto. _id se toma de la URL. Timestamps se ignoran."
      properties:
        nombre: { type: string }
        codigo_atc: { type: string, nullable: true }
        requiere_receta: { type: boolean, nullable: true }
        activo: { type: boolean, default: true }
        keywords:
          type: array
          items: { type: string }
        variantes:
          type: array
          items:
            $ref: "#/components/schemas/Variante"