services:
  catalogo:
    build: ./catalogo
    container_name: catalogo-api
    ports:
      - "${CATALOGO_PORT:-8084}:8084"
    environment:
      CATALOGO_BASE_PATH: ${CATALOGO_BASE_PATH}
      PORT: ${CATALOGO_PORT:-8084}
      MONGO_URL: ${MONGO_URL}
      CORS_ORIGINS: ${CORS_ORIGINS}
      SERVE_DOCS: "1"
    volumes:
      - ./catalogo/docs:/app/docs:ro
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8084${CATALOGO_BASE_PATH}/healthz"]
      interval: 15s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  inventario:
    build: ./inventario
    container_name: inventario-api
    ports:
      - "${INVENTARIO_PORT:-8082}:8082"
    environment:
      BASE_PATH: ${INVENTARIO_BASE_PATH}
      PG_HOST: ${PG_HOST}
      PG_PORT: ${PG_PORT}
      PG_DB: ${PG_DB}
      PG_USER: ${PG_USER}
      PG_PASSWORD: ${PG_PASSWORD}
      CORS_ORIGINS: ${CORS_ORIGINS}
      CATALOGO_BASE_URL: http://catalogo-api:8084${CATALOGO_BASE_PATH}
    volumes:
      - ./inventario/docs:/app/docs:ro
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8082${INVENTARIO_BASE_PATH}/healthz || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  recetas:
    build: ./recetas
    container_name: recetas-api
    ports:
      - "${RECETAS_PORT:-8083}:8083"
    environment:
      MYSQL_URL: ${MYSQL_URL}
      CORS_ORIGINS: ${CORS_ORIGINS}
      RECETAS_BASE_PATH: ${RECETAS_BASE_PATH}
      CATALOGO_BASE_URL: http://catalogo-api:8084${CATALOGO_BASE_PATH}
      INVENTARIO_BASE_URL: http://inventario-api:8082${INVENTARIO_BASE_PATH}
    healthcheck:
      test: ["CMD","wget","-qO-","http://localhost:8083${RECETAS_BASE_PATH}/healthz"]
      interval: 15s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  orquestador:
    build: ./orquestador
    container_name: orquestador-api
    ports:
      - "${ORQUESTADOR_PORT:-8085}:8085"
    environment:
      ORQUESTADOR_BASE_PATH: ${ORQUESTADOR_BASE_PATH}
      PORT: ${ORQUESTADOR_PORT:-8085}
      CORS_ORIGINS: ${CORS_ORIGINS}
      SERVE_DOCS: "1"
      CATALOGO_URL: http://catalogo-api:8084${CATALOGO_BASE_PATH}
      INVENTARIO_URL: http://inventario-api:8082${INVENTARIO_BASE_PATH}
      RECETAS_URL: http://recetas-api:8083${RECETAS_BASE_PATH}
    volumes:
      - ./orquestador/docs:/app/docs:ro
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8085${ORQUESTADOR_BASE_PATH}/healthz"]
      interval: 15s
      timeout: 5s
      retries: 3
    depends_on:
      catalogo:
        condition: service_healthy
      inventario:
        condition: service_healthy
      recetas:
        condition: service_healthy
    restart: unless-stopped

  analitico: 
    build: ./analitico
    container_name: analitico-api
    ports:
      - "${ANALITICO_PORT:-8086}:8086" 
    environment:
      AWS_REGION: ${AWS_REGION}
      ATHENA_DB: ${ATHENA_DB}
      ATHENA_OUTPUT: ${ATHENA_OUTPUT}
      ANALITICO_BASE_PATH: ${ANALITICO_BASE_PATH}
      CORS_ORIGINS: ${CORS_ORIGINS}
    volumes:
      - ~/.aws:/root/.aws:ro
    healthcheck:

      test: ["CMD-SHELL", "wget -qO- http://localhost:8086${ANALITICO_BASE_PATH}/healthz || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
    restart: unless-stopped