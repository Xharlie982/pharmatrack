openapi: 3.0.3
info:
  title: Inventario y Sucursales API
  version: "1.3.0"
  description: "Microservicio para gestionar sucursales, stock y movimientos de inventario."

servers:
  - url: "{basePath}"
    variables:
      basePath:
        default: /inventario

tags:
  - name: Health
    description: Verificación de estado
  - name: Sucursales
    description: Gestión de sucursales
  - name: Stocks
    description: Consulta y ajuste de stock
  - name: Movimientos
    description: Historial y registro de movimientos

paths:
  /healthz:
    get:
      tags: [Health]
      summary: Health check
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

  /sucursales:
    get:
      tags: [Sucursales]
      summary: Listar sucursales (filtrable por distrito)
      parameters:
        - in: query
          name: distrito
          schema: { type: string }
          required: false
          description: Filtra por distrito (case-insensitive). Si se omite, devuelve todas.
      responses:
        "200":
          description: Lista de sucursales.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Sucursal"
    post:
      tags: [Sucursales]
      summary: Crear sucursal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SucursalCreate"
      responses:
        "201":
          description: Creado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sucursal"
        "400":
          $ref: '#/components/responses/BadRequest'
        "409":
          $ref: '#/components/responses/Conflict'

  /sucursales/{id_sucursal}:
    get:
      tags: [Sucursales]
      summary: Obtener sucursal por ID
      parameters:
        - in: path
          name: id_sucursal
          required: true
          schema: { type: integer }
      responses:
        "200":
          description: Datos de la sucursal.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sucursal"
        "404":
          $ref: '#/components/responses/NotFound'
    put:
      tags: [Sucursales]
      summary: Actualizar datos de una sucursal
      parameters:
        - in: path
          name: id_sucursal
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SucursalUpdate"
      responses:
        "200":
          description: Actualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Sucursal"
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'

  /stock:
    get:
      tags: [Stocks]
      summary: Consultar stock (filtrable)
      parameters:
        - in: query
          name: id_producto
          schema: { type: string }
          required: false
          description: ID del producto (Catálogo).
        - in: query
          name: idProducto
          schema: { type: string }
          required: false
          deprecated: true
        - in: query
          name: id_sucursal
          schema: { type: integer }
          required: false
          description: ID de sucursal.
        - in: query
          name: idSucursal
          schema: { type: integer }
          required: false
          deprecated: true
        - in: query
          name: distrito
          schema: { type: string }
          required: false
          description: Filtra por distrito.
      responses:
        "200":
          description: Lista de registros de stock.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/StockItem"
    patch:
      tags: [Stocks]
      summary: Ajustar stock de un producto en una sucursal
      description: "Realiza un ajuste (positivo o negativo) al stock actual y registra un movimiento. No usar para entradas/salidas normales (usar POST /movimientos)."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AjusteStockRequest'
      responses:
        "200":
          description: Stock ajustado exitosamente. Devuelve el estado actualizado del stock.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StockItem"
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "503":
          $ref: '#/components/responses/DependencyDown'

  /movimientos:
    get:
      tags: [Movimientos]
      summary: Listar historial de movimientos de stock
      parameters:
        - in: query
          name: producto_id
          required: false
          schema: { type: string }
        - in: query
          name: sucursal_id
          required: false
          schema: { type: integer }
      responses:
        "200":
          description: Lista de movimientos ordenada por fecha descendente.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Movimiento"
    post:
      tags: [Movimientos]
      summary: Registrar ENTRADA/EGRESO y actualizar stock
      description: |
        Registra una operación normal de inventario.
        - Actualiza el `stock_actual`.
        - Si es ENTRADA y el stock no existe, lo crea con `umbral_reposicion=0`.
        - Valida contra Catálogo si está habilitado.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MovimientoCreate"
      responses:
        "201":
          description: Movimiento registrado y stock actualizado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Movimiento"
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFound'
        "503":
          $ref: '#/components/responses/DependencyDown'

components:
  schemas:
    HealthStatus:
      type: object
      properties:
        status: { type: string, example: ok }
    ErrorDetail:
      type: object
      properties:
        detail: { type: string }

    Sucursal:
      type: object
      properties:
        id_sucursal: { type: integer }
        nombre: { type: string }
        distrito: { type: string }
        direccion: { type: string, nullable: true, description: "Dirección de la sucursal." }
    SucursalCreate:
      type: object
      required: [id_sucursal, nombre, distrito, direccion]
      properties:
        id_sucursal: { type: integer, minimum: 1 }
        nombre: { type: string, minLength: 1 }
        distrito: { type: string, minLength: 1 }
        direccion: { type: string, minLength: 1, description: "Dirección de la sucursal." }
    SucursalUpdate:
      type: object
      required: [nombre, distrito, direccion]
      properties:
        nombre: { type: string, minLength: 1 }
        distrito: { type: string, minLength: 1 }
        direccion: { type: string, minLength: 1, description: "Dirección de la sucursal." }

    StockItem:
      type: object
      properties:
        id_sucursal: { type: integer }
        id_producto: { type: string }
        stock_actual: { type: integer }
        umbral_reposicion: { type: integer, description: "Umbral de reposición." }
        fecha_actualizacion: { type: string, format: date-time }
    AjusteStockRequest:
      type: object
      required: [id_sucursal, id_producto, ajuste]
      properties:
        id_sucursal: { type: integer }
        id_producto: { type: string }
        ajuste: { type: integer, description: "Variación (+/-). Lógica de negocio prohíbe 0." }
        motivo: { type: string, nullable: true, default: "AJUSTE" }

    Movimiento:
      type: object
      properties:
        id: { type: integer, readOnly: true }
        id_sucursal: { type: integer }
        id_producto: { type: string }
        tipo_movimiento: { type: string, enum: [ENTRADA, EGRESO] }
        cantidad: { type: integer }
        fecha_movimiento: { type: string, format: date-time, readOnly: true }
        motivo: { type: string, nullable: true }
    MovimientoCreate:
      type: object
      required: [id_sucursal, id_producto, tipo_movimiento, cantidad]
      properties:
        id_sucursal: { type: integer }
        id_producto: { type: string }
        tipo_movimiento: { type: string, enum: [ENTRADA, EGRESO] }
        cantidad: { type: integer, minimum: 1 }
        motivo: { type: string, nullable: true }

  responses:
    BadRequest:
      description: Error en los datos de entrada (formato, validación, lógica).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
    NotFound:
      description: Recurso no encontrado (ID no existe).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
    Conflict:
      description: Conflicto (ej. ID ya existe).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'
    DependencyDown:
      description: Falla al comunicarse con un servicio externo (ej. Catálogo).
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorDetail'