openapi: 3.0.3
info: { title: Orquestador PharmaTrack, version: "1.2.1" }

servers:
  - url: http://{host}:{port}{basePath}
    variables:
      host:     { default: localhost }
      port:     { default: "8085" }
      basePath: { default: /orquestador }

tags:
  - name: Health
  - name: Disponibilidad
  - name: Recetas
  - name: Sugerencias

paths:
  /healthz:
    get:
      tags: [Health]
      summary: Liveness
      responses:
        "200":
          description: OK

  /readyz:
    get:
      tags: [Health]
      summary: Readiness (ping a downstreams)
      responses:
        "200": { description: OK }
        "503": { description: Downstream no disponible }

  /disponibilidad:
    get:
      tags: [Disponibilidad]
      summary: Disponibilidad por producto y zona
      parameters:
        - { name: productoId, in: query, required: false, schema: { type: string } }
        - { name: q,          in: query, required: false, schema: { type: string }, description: "búsqueda libre en Catálogo" }
        - { name: distrito,   in: query, required: true,  schema: { type: string } }
        - { name: minStock,   in: query, required: false, schema: { type: integer, default: 1 } }
      responses:
        "200": { description: OK }
        "400": { description: Faltan parámetros }
        "502": { description: Error en servicios downstream }

  /ficha-producto/{productoId}:
    get:
      tags: [Disponibilidad]
      summary: Ficha (Catálogo + agregados de stock)
      parameters:
        - { name: productoId, in: path, required: true, schema: { type: string } }
      responses:
        "200": { description: OK }
        "404": { description: Not Found }
        "502": { description: Downstream error }

  /receta/validar:
    post:
      tags: [Recetas]
      summary: Pre-validar stock para una receta (no escribe nada)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ id_receta ]
              properties:
                id_receta: { type: integer }
      responses:
        "200": { description: OK (todo disponible) }
        "207": { description: Parcial (algunos ítems faltan) }
        "400": { description: Bad Request }
        "404": { description: Receta no encontrada }
        "502": { description: Downstream error }

  /receta/{id}/validacion:
    get:
      tags: [Recetas]
      summary: Ver la validación calculada
      parameters:
        - { name: id, in: path, required: true, schema: { type: string } }
      responses:
        "200": { description: OK }
        "404": { description: Not Found }
        "502": { description: Downstream error }

  /reserva-stock:
    post:
      tags: [Recetas]
      summary: Reserva efímera (in-memory) por id_receta (MVP)
      parameters:
        - { name: Idempotency-Key, in: header, required: false, schema: { type: string } }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ id_receta ]
              properties:
                id_receta: { type: integer }
      responses:
        "200": { description: Reserved }
        "207": { description: Partial }
        "409": { description: Conflict (sin stock) }
        "502": { description: Downstream error }

  /sugerencias/reposicion:
    get:
      tags: [Sugerencias]
      summary: Top productos con quiebre por distrito (MVP)
      parameters:
        - { name: distrito, in: query, required: true, schema: { type: string } }
        - { name: top,      in: query, required: false, schema: { type: integer, default: 20 } }
      responses:
        "200": { description: OK }
        "400": { description: Bad Request }
        "502": { description: Downstream error }
