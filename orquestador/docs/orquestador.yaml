openapi: 3.0.3
info: { title: Orquestador API, version: "1.3.0" }

servers:
  - url: http://{host}:{port}{basePath}
    variables:
      host:     { default: localhost }
      port:     { default: "8085" }
      basePath: { default: /orquestador }

tags:
  - name: Health
  - name: Disponibilidad
  - name: Recetas

paths:
  /healthz:
    get:
      tags: [Health]
      summary: Liveness
      responses: { "200": { description: OK } }

  /readyz:
    get:
      tags: [Health]
      summary: Readiness (ping a downstreams)
      responses:
        "200": { description: OK }
        "503": { description: Downstream no disponible }

  /disponibilidad:
    get:
      tags: [Disponibilidad]
      summary: Disponibilidad por producto y zona
      description: >
        Use **producto** (ID exacto) o **busqueda** (texto libre Catálogo).
        Compatibilidad: `productoId`, `q`, `minStock` también funcionan.
      parameters:
        - name: producto
          in: query
          required: false
          schema: { type: string }
          description: ID canónico del producto (alias aceptado: **productoId**).
        - name: busqueda
          in: query
          required: false
          schema: { type: string }
          description: Texto libre para buscar en Catálogo (alias aceptado: **q**).
        - name: distrito
          in: query
          required: true
          schema: { type: string }
        - name: stock_minimo
          in: query
          required: false
          schema: { type: integer, default: 1 }
          description: Filtra sucursales con stock >= a este valor (alias aceptado: **minStock**).
      responses:
        "200": { description: OK }
        "400": { description: Faltan parámetros }
        "502": { description: Downstream error }

  /ficha-producto/{producto}:
    get:
      tags: [Disponibilidad]
      summary: Ficha (Catálogo + agregados de stock)
      parameters:
        - name: producto
          in: path
          required: true
          schema: { type: string }
      responses:
        "200": { description: OK }
        "404": { description: Not Found }
        "502": { description: Downstream error }

  /receta/validar:
    post:
      tags: [Recetas]
      summary: Pre-validar stock para una receta (no escribe nada)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ id_receta ]
              properties:
                id_receta: { type: integer }
      responses:
        "200": { description: OK (todo disponible) }
        "207": { description: Parcial (algunos ítems faltan) }
        "400": { description: Bad Request }
        "404": { description: Receta no encontrada }
        "502": { description: Downstream error }

  /receta/{id}/validacion:
    get:
      tags: [Recetas]
      summary: Ver la validación calculada
      parameters:
        - { name: id, in: path, required: true, schema: { type: string } }
      responses:
        "200": { description: OK }
        "404": { description: Not Found }
        "502": { description: Downstream error }
