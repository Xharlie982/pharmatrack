openapi: 3.0.3
info:
  title: Orquestador API (PharmaTrack)
  version: "1.4.0"
  description: "API central que orquesta las llamadas a los microservicios de Catálogo, Inventario y Recetas para simplificar las operaciones del frontend."

servers:
  - url: "{basePath}"
    variables:
      basePath:
        default: /orquestador

tags:
  - name: Health
    description: Verificación de estado del servicio
  - name: Disponibilidad
    description: Consultas combinadas de productos y stock
  - name: Recetas
    description: Orquestación de validaciones de recetas

paths:
  /healthz:
    get:
      tags: [Health]
      summary: Health check básico (liveness)
      description: Devuelve un estado 'ok' si el servicio del orquestador está en ejecución.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status: { type: string, example: ok }

  /disponibilidad:
    get:
      tags: [Disponibilidad]
      summary: Buscar disponibilidad de productos en un distrito
      description: "Combina una búsqueda en Catálogo con una consulta de stock en Inventario para encontrar productos activos con stock en un distrito específico."
      parameters:
        - name: producto
          in: query
          required: false
          schema: { type: string }
          description: ID exacto del producto a buscar. Usar este o 'keyword'.
        - name: keyword
          in: query
          required: false
          schema: { type: string }
          description: Texto libre para buscar en el nombre o keywords del Catálogo. Usar este o 'producto'.
        - name: distrito
          in: query
          required: true 
          schema: { type: string }
          description: Distrito donde buscar el stock.
        - name: stock_minimo
          in: query
          required: false
          schema: { type: integer, default: 1 }
          description: Filtra sucursales con stock mayor o igual a este valor.
      responses:
        "200":
          description: "Éxito. Devuelve una lista de productos con sus sucursales disponibles."
        "400":
          description: "Faltan parámetros requeridos ('distrito' y ('producto' o 'keyword'))."
        "502":
          description: "Error en un servicio externo (Catálogo o Inventario)."

  /ficha-producto/{productoId}: 
    get:
      tags: [Disponibilidad]
      summary: Obtener ficha completa de un producto
      description: "Obtiene los detalles de un producto desde Catálogo y le agrega un resumen del stock total por distrito desde Inventario."
      parameters:
        - name: productoId 
          in: path
          required: true
          schema: { type: string }
          description: "ID del producto a consultar."
      responses:
        "200": { description: OK }
        "404": { description: Producto no encontrado en Catálogo. }
        "502": { description: Error en un servicio externo. }

  /receta/validar:
    post:
      tags: [Recetas]
      summary: Pre-validar el stock para una receta
      description: "Consulta el stock en la sucursal de la receta para cada uno de sus productos y sugiere un estado (VALIDADA, PARCIAL, RECHAZADA)."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [id_receta] 
              properties:
                id_receta: { type: integer }
      responses:
        "200": { description: "OK, con estado sugerido." }
        "400": { description: "Falta id_receta en el cuerpo de la petición." }
        "404": { description: "La receta no fue encontrada en el servicio de Recetas." }
        "502": { description: "Error en un servicio externo." }