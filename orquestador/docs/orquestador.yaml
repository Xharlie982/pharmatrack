openapi: 3.0.3
info:
  title: Orquestador de Disponibilidad API
  version: "1.1.0"
servers:
  - url: http://{host}{basePath}
    variables:
      host:
        default: lb-prod-carlosalith-1509980544.us-east-1.elb.amazonaws.com
      basePath:
        default: /orquestador

tags:
  - name: Health
  - name: Disponibilidad
  - name: Recetas

paths:
  /healthz:
    get:
      tags: [Health]
      summary: Liveness probe
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: { status: { type: string, example: ok } }

  /readyz:
    get:
      tags: [Health]
      summary: Readiness (ping a servicios downstream)
      responses:
        "200":
          description: OK
        "503":
          description: Downstream no disponible

  /disponibilidad:
    get:
      tags: [Disponibilidad]
      summary: Disponibilidad por producto y zona
      parameters:
        - in: query
          name: id_producto
          required: true
          schema: { type: string }
        - in: query
          name: distrito
          required: false
          schema: { type: string }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  producto:
                    $ref: "#/components/schemas/Producto"
                  sucursales:
                    type: array
                    items:
                      $ref: "#/components/schemas/SucursalStock"
        "400": { description: Faltan parámetros }
        "502": { description: Error en servicios downstream }

  /recetas/{id_receta}/validacion:
    get:
      tags: [Recetas]
      summary: Validar disponibilidad de una receta
      parameters:
        - in: path
          name: id_receta
          required: true
          schema: { type: integer }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RespuestaValidacion"
        "404": { description: Receta no encontrada }
        "502": { description: Downstream error }

  /dispensar:
    post:
      tags: [Recetas]
      summary: Dispensar una receta (coordina movimientos y creación de dispensación)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [ id_receta ]
              properties:
                id_receta: { type: integer }
                idempotency_key:
                  type: string
                  description: Recomendado para reintentos seguros
      responses:
        "200":
          description: Dispensación efectuada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResultadoDispensacion"
        "409": { description: Stock insuficiente }
        "422": { description: Receta sin líneas o datos inválidos }
        "502": { description: Downstream error con compensación }
        "504": { description: Timeout coordinando servicios }

components:
  schemas:
    Producto:
      type: object
      properties:
        _id: { type: string }
        nombre: { type: string }
        requiere_receta: { type: boolean }

    SucursalStock:
      type: object
      properties:
        id_sucursal: { type: integer }
        nombre: { type: string }
        distrito: { type: string }
        stock_actual: { type: integer }
        umbral_reposicion: { type: integer }

    ItemValidacion:
      type: object
      properties:
        id_producto: { type: string }
        solicitado: { type: integer }
        disponible: { type: integer }
        id_sucursal_sugerida: { type: integer, nullable: true }

    RespuestaValidacion:
      type: object
      properties:
        id_receta: { type: integer }
        estado_sugerido:
          type: string
          enum: ["VALIDADA","RECHAZADA","PARCIAL"]
        items:
          type: array
          items: { $ref: "#/components/schemas/ItemValidacion" }

    ResultadoDispensacion:
      type: object
      properties:
        ok: { type: boolean }
        id_receta: { type: integer }
        estado_final:
          type: string
          enum: ["DISPENSADA","RECHAZADA","PARCIAL"]
        movimientos:
          type: array
          items:
            type: object
            properties:
              id_sucursal: { type: integer }
              id_producto: { type: string }
              tipo: { type: string, enum: ["EGRESO","ENTRADA"] }
              cantidad: { type: integer }
        correlation_id: { type: string }
        message: { type: string }
        details:
          type: array
          items: { type: object }
